/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as DemoStoreImport } from './routes/demo.store'
import { Route as DemoFormImport } from './routes/demo.form'
import { Route as AuthTransaccionesPresupuestoImport } from './routes/_auth/transacciones/presupuesto'
import { Route as AuthTransaccionesFacturaImport } from './routes/_auth/transacciones/factura'
import { Route as AuthTransaccionesCierreImport } from './routes/_auth/transacciones/cierre'
import { Route as AuthReportesHistoricoImport } from './routes/_auth/reportes/historico'
import { Route as AuthReportesGastadoPorPartidaImport } from './routes/_auth/reportes/gastado-por-partida'
import { Route as AuthReportesCuadreImport } from './routes/_auth/reportes/cuadre'
import { Route as AuthReportesActualImport } from './routes/_auth/reportes/actual'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoStoreRoute = DemoStoreImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRoute,
} as any)

const DemoFormRoute = DemoFormImport.update({
  id: '/demo/form',
  path: '/demo/form',
  getParentRoute: () => rootRoute,
} as any)

const AuthTransaccionesPresupuestoRoute =
  AuthTransaccionesPresupuestoImport.update({
    id: '/transacciones/presupuesto',
    path: '/transacciones/presupuesto',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthTransaccionesFacturaRoute = AuthTransaccionesFacturaImport.update({
  id: '/transacciones/factura',
  path: '/transacciones/factura',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTransaccionesCierreRoute = AuthTransaccionesCierreImport.update({
  id: '/transacciones/cierre',
  path: '/transacciones/cierre',
  getParentRoute: () => AuthRoute,
} as any)

const AuthReportesHistoricoRoute = AuthReportesHistoricoImport.update({
  id: '/reportes/historico',
  path: '/reportes/historico',
  getParentRoute: () => AuthRoute,
} as any)

const AuthReportesGastadoPorPartidaRoute =
  AuthReportesGastadoPorPartidaImport.update({
    id: '/reportes/gastado-por-partida',
    path: '/reportes/gastado-por-partida',
    getParentRoute: () => AuthRoute,
  } as any)

const AuthReportesCuadreRoute = AuthReportesCuadreImport.update({
  id: '/reportes/cuadre',
  path: '/reportes/cuadre',
  getParentRoute: () => AuthRoute,
} as any)

const AuthReportesActualRoute = AuthReportesActualImport.update({
  id: '/reportes/actual',
  path: '/reportes/actual',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/demo/form': {
      id: '/demo/form'
      path: '/demo/form'
      fullPath: '/demo/form'
      preLoaderRoute: typeof DemoFormImport
      parentRoute: typeof rootRoute
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reportes/actual': {
      id: '/_auth/reportes/actual'
      path: '/reportes/actual'
      fullPath: '/reportes/actual'
      preLoaderRoute: typeof AuthReportesActualImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reportes/cuadre': {
      id: '/_auth/reportes/cuadre'
      path: '/reportes/cuadre'
      fullPath: '/reportes/cuadre'
      preLoaderRoute: typeof AuthReportesCuadreImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reportes/gastado-por-partida': {
      id: '/_auth/reportes/gastado-por-partida'
      path: '/reportes/gastado-por-partida'
      fullPath: '/reportes/gastado-por-partida'
      preLoaderRoute: typeof AuthReportesGastadoPorPartidaImport
      parentRoute: typeof AuthImport
    }
    '/_auth/reportes/historico': {
      id: '/_auth/reportes/historico'
      path: '/reportes/historico'
      fullPath: '/reportes/historico'
      preLoaderRoute: typeof AuthReportesHistoricoImport
      parentRoute: typeof AuthImport
    }
    '/_auth/transacciones/cierre': {
      id: '/_auth/transacciones/cierre'
      path: '/transacciones/cierre'
      fullPath: '/transacciones/cierre'
      preLoaderRoute: typeof AuthTransaccionesCierreImport
      parentRoute: typeof AuthImport
    }
    '/_auth/transacciones/factura': {
      id: '/_auth/transacciones/factura'
      path: '/transacciones/factura'
      fullPath: '/transacciones/factura'
      preLoaderRoute: typeof AuthTransaccionesFacturaImport
      parentRoute: typeof AuthImport
    }
    '/_auth/transacciones/presupuesto': {
      id: '/_auth/transacciones/presupuesto'
      path: '/transacciones/presupuesto'
      fullPath: '/transacciones/presupuesto'
      preLoaderRoute: typeof AuthTransaccionesPresupuestoImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthReportesActualRoute: typeof AuthReportesActualRoute
  AuthReportesCuadreRoute: typeof AuthReportesCuadreRoute
  AuthReportesGastadoPorPartidaRoute: typeof AuthReportesGastadoPorPartidaRoute
  AuthReportesHistoricoRoute: typeof AuthReportesHistoricoRoute
  AuthTransaccionesCierreRoute: typeof AuthTransaccionesCierreRoute
  AuthTransaccionesFacturaRoute: typeof AuthTransaccionesFacturaRoute
  AuthTransaccionesPresupuestoRoute: typeof AuthTransaccionesPresupuestoRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthReportesActualRoute: AuthReportesActualRoute,
  AuthReportesCuadreRoute: AuthReportesCuadreRoute,
  AuthReportesGastadoPorPartidaRoute: AuthReportesGastadoPorPartidaRoute,
  AuthReportesHistoricoRoute: AuthReportesHistoricoRoute,
  AuthTransaccionesCierreRoute: AuthTransaccionesCierreRoute,
  AuthTransaccionesFacturaRoute: AuthTransaccionesFacturaRoute,
  AuthTransaccionesPresupuestoRoute: AuthTransaccionesPresupuestoRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof AuthIndexRoute
  '/reportes/actual': typeof AuthReportesActualRoute
  '/reportes/cuadre': typeof AuthReportesCuadreRoute
  '/reportes/gastado-por-partida': typeof AuthReportesGastadoPorPartidaRoute
  '/reportes/historico': typeof AuthReportesHistoricoRoute
  '/transacciones/cierre': typeof AuthTransaccionesCierreRoute
  '/transacciones/factura': typeof AuthTransaccionesFacturaRoute
  '/transacciones/presupuesto': typeof AuthTransaccionesPresupuestoRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof AuthIndexRoute
  '/reportes/actual': typeof AuthReportesActualRoute
  '/reportes/cuadre': typeof AuthReportesCuadreRoute
  '/reportes/gastado-por-partida': typeof AuthReportesGastadoPorPartidaRoute
  '/reportes/historico': typeof AuthReportesHistoricoRoute
  '/transacciones/cierre': typeof AuthTransaccionesCierreRoute
  '/transacciones/factura': typeof AuthTransaccionesFacturaRoute
  '/transacciones/presupuesto': typeof AuthTransaccionesPresupuestoRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/demo/form': typeof DemoFormRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/reportes/actual': typeof AuthReportesActualRoute
  '/_auth/reportes/cuadre': typeof AuthReportesCuadreRoute
  '/_auth/reportes/gastado-por-partida': typeof AuthReportesGastadoPorPartidaRoute
  '/_auth/reportes/historico': typeof AuthReportesHistoricoRoute
  '/_auth/transacciones/cierre': typeof AuthTransaccionesCierreRoute
  '/_auth/transacciones/factura': typeof AuthTransaccionesFacturaRoute
  '/_auth/transacciones/presupuesto': typeof AuthTransaccionesPresupuestoRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/demo/form'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/'
    | '/reportes/actual'
    | '/reportes/cuadre'
    | '/reportes/gastado-por-partida'
    | '/reportes/historico'
    | '/transacciones/cierre'
    | '/transacciones/factura'
    | '/transacciones/presupuesto'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/demo/form'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/'
    | '/reportes/actual'
    | '/reportes/cuadre'
    | '/reportes/gastado-por-partida'
    | '/reportes/historico'
    | '/transacciones/cierre'
    | '/transacciones/factura'
    | '/transacciones/presupuesto'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/demo/form'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/_auth/'
    | '/_auth/reportes/actual'
    | '/_auth/reportes/cuadre'
    | '/_auth/reportes/gastado-por-partida'
    | '/_auth/reportes/historico'
    | '/_auth/transacciones/cierre'
    | '/_auth/transacciones/factura'
    | '/_auth/transacciones/presupuesto'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  DemoFormRoute: typeof DemoFormRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  DemoFormRoute: DemoFormRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login",
        "/demo/form",
        "/demo/store",
        "/demo/tanstack-query"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/reportes/actual",
        "/_auth/reportes/cuadre",
        "/_auth/reportes/gastado-por-partida",
        "/_auth/reportes/historico",
        "/_auth/transacciones/cierre",
        "/_auth/transacciones/factura",
        "/_auth/transacciones/presupuesto"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/demo/form": {
      "filePath": "demo.form.tsx"
    },
    "/demo/store": {
      "filePath": "demo.store.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/reportes/actual": {
      "filePath": "_auth/reportes/actual.tsx",
      "parent": "/_auth"
    },
    "/_auth/reportes/cuadre": {
      "filePath": "_auth/reportes/cuadre.tsx",
      "parent": "/_auth"
    },
    "/_auth/reportes/gastado-por-partida": {
      "filePath": "_auth/reportes/gastado-por-partida.tsx",
      "parent": "/_auth"
    },
    "/_auth/reportes/historico": {
      "filePath": "_auth/reportes/historico.tsx",
      "parent": "/_auth"
    },
    "/_auth/transacciones/cierre": {
      "filePath": "_auth/transacciones/cierre.tsx",
      "parent": "/_auth"
    },
    "/_auth/transacciones/factura": {
      "filePath": "_auth/transacciones/factura.tsx",
      "parent": "/_auth"
    },
    "/_auth/transacciones/presupuesto": {
      "filePath": "_auth/transacciones/presupuesto.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
